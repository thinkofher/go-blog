#!/bin/bash
# author Beniamin Dudek <beniamin.dudek@yahoo.com>
# Simple script for automation of building containers with podman.

CONTAINER_POD_NAME=goblog

CONTAINER_DB_FILENAME=Dockerfile.db
CONTAINER_DB_IMAGE_NAME=postgres-goblog
CONTAINER_DB_NAME=goblog-db

CONTAINER_APP_FILENAME=Dockerfile
CONTAINER_APP_IMAGE_NAME=golang-alpine-goblog
CONTAINER_APP_NAME=goblog-app

LOCALHOST=127.0.0.1
GOBLOG_PORT=8080
DB_PORT=5432
PUBLIC_PORT=65432

case $1 in
    onlydb)
        podman build -t $CONTAINER_DB_IMAGE_NAME -f $CONTAINER_DB_FILENAME
        podman run --name $CONTAINER_DB_NAME -d -P -p $LOCALHOST:$DB_PORT:$DB_PORT $CONTAINER_DB_IMAGE_NAME
        ;;
    init)
        podman pod create -p $LOCALHOST:$PUBLIC_PORT:$GOBLOG_PORT/tcp --name $CONTAINER_POD_NAME

        podman build -t $CONTAINER_DB_IMAGE_NAME -f $CONTAINER_DB_FILENAME
        podman run -dt --name $CONTAINER_DB_NAME --pod $CONTAINER_POD_NAME $CONTAINER_DB_IMAGE_NAME

        podman build -t $CONTAINER_APP_IMAGE_NAME -f $CONTAINER_APP_FILENAME
        podman run -dt --env SESSION_KEY --name $CONTAINER_APP_NAME --pod $CONTAINER_POD_NAME $CONTAINER_APP_IMAGE_NAME
        ;;
    clean)
        podman stop $CONTAINER_DB_NAME
        podman rm $CONTAINER_DB_NAME
        podman stop $CONTAINER_APP_NAME
        podman rm $CONTAINER_APP_NAME
        podman pod stop $CONTAINER_POD_NAME
        podman pod rm $CONTAINER_POD_NAME
        ;;
    *)
esac
